services:
  bgs-backend:
    image: ${APP_NAME}:latest
    container_name: ${APP_NAME}
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: '${PG_USER}'
      SPRING_DATASOURCE_PASSWORD: '${PG_PASSWORD}'
      GIT_TOKEN: '${GIT_TOKEN}'
    expose:
      - '${APP_PORT}'
    ports:
      - '${APP_PORT}:${APP_PORT}'
    networks:
      - tasks-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: ${PG_HOST}
    restart: always
    environment:
      POSTGRES_DB: '${PG_DATABASE}'
      POSTGRES_USER: '${PG_USER}'
      POSTGRES_PASSWORD: '${PG_PASSWORD}'
    networks:
      - tasks-network
    volumes:
      - ./volumes/postgres:/data/db
    ports:
      - '${PG_PORT}:${PG_PORT}' # TODO: only for debug
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=${PG_USER} --dbname=${PG_DATABASE} --port=${PG_PORT} -t 0"]
      interval: 5s
      timeout: 10s
      retries: 5

  reverse-proxy:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - bgs-backend
      - postgres
    volumes:
    - ./nginx-conf:/etc/nginx/nginx.conf
    networks:
      - tasks-network

networks:
  tasks-network:
    driver: bridge
